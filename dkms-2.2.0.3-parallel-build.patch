--- dkms-2.2.0.3/dkms.parallel~	2013-06-16 02:58:30.276854797 +0200
+++ dkms-2.2.0.3/dkms	2013-06-16 03:01:49.485021308 +0200
@@ -19,6 +19,8 @@
 #    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 #
 
+# do build with jobs being twice the number of cpus
+make_flags="-j$((`/usr/bin/getconf _NPROCESSORS_ONLN` * 2))"
 
 # All of the variables we will accept from dkms.conf.
 # Does not include directives
@@ -587,22 +589,22 @@ read_conf()
     done
 
     # Get the correct make command
-    [[ ${MAKE_MATCH[0]} ]] || make_command="${MAKE[0]}"
+    [[ ${MAKE_MATCH[0]} ]] || make_command="${MAKE[0]} $make_flags"
     for ((index=0; index < ${#MAKE[@]}; index++)); do
 	[[ ${MAKE[$index]} && ${MAKE_MATCH[$index]} && \
 	    $1 =~ ${MAKE_MATCH[$index]} ]] && \
-	    make_command="${MAKE[$index]}"
+	    make_command="${MAKE[$index]} $make_flags"
     done
 
     # Use the generic make and make clean commands if not specified
     if [[ $(VER $1) < $(VER 2.6.6) ]]; then
 	[[ ! $make_command ]] && \
-	    make_command="make -C $kernel_source_dir SUBDIRS=$dkms_tree/$module/$module_version/build modules"
+	    make_command="make $make_flags -C $kernel_source_dir SUBDIRS=$dkms_tree/$module/$module_version/build modules"
 	[[ ! $clean ]] && \
 	    clean="make -C $kernel_source_dir SUBDIRS=$dkms_tree/$module/$module_version/build clean"
     else
 	[[ ! $make_command ]] && \
-	    make_command="make -C $kernel_source_dir M=$dkms_tree/$module/$module_version/build"
+	    make_command="make $make_flags -C $kernel_source_dir M=$dkms_tree/$module/$module_version/build"
 	 [[ ! $clean ]] && \
 	     clean="make -C $kernel_source_dir M=$dkms_tree/$module/$module_version/build clean"
     fi
@@ -1145,8 +1147,8 @@ prepare_kernel()
 	[[ $config_contents ]] && echo "$config_contents" > .config
 	invoke_command "cp /boot/vmlinuz.version.h include/linux/version.h" "using /boot/vmlinux.version.h"
 	invoke_command "cp -f $kernel_config .config" "using $kernel_config"
-	invoke_command "make KERNELRELEASE=$1 cloneconfig" "make cloneconfig" background
-	invoke_command "make CONFIG_MODVERSIONS=1 KERNELRELEASE=$1 dep" "make CONFIG_MODVERSIONS=1 dep" background
+	invoke_command "make $make_flags KERNELRELEASE=$1 cloneconfig" "make $make_flags cloneconfig" background
+	invoke_command "make $make_flags CONFIG_MODVERSIONS=1 KERNELRELEASE=$1 dep" "make $make_flags CONFIG_MODVERSIONS=1 dep" background
     elif grep -q rhconfig.h $kernel_source_dir/include/linux/{modversions,version}.h 2>/dev/null; then
  	if [ -e /etc/mandriva-release ]; then
  	    echo $"Running Moondrake style preparation routine"
@@ -1178,7 +1180,7 @@ prepare_kernel()
 	    mv -f $kernel_source_dir/tmp_include_depends.new $kernel_source_dir/tmp_include_depends
 	fi
 
-	invoke_command "make KERNELRELEASE=$1 oldconfig" "make oldconfig" background
+	invoke_command "make $make_flags KERNELRELEASE=$1 oldconfig" "make $make_flags oldconfig" background
 	kerneldoth_contents=$(cat /boot/kernel.h 2>/dev/null)
 	invoke_command "/usr/lib/dkms/mkkerneldoth --kernelver $1 --targetarch $2 --output /boot/kernel.h" "running mkkerneldoth" background
     else
@@ -1202,11 +1204,11 @@ prepare_kernel()
 		$"Your build will likely fail because of this."
 	fi
 
-	invoke_command "make KERNELRELEASE=$1 oldconfig" "make oldconfig" background
+	invoke_command "make $make_flags KERNELRELEASE=$1 oldconfig" "make $make_flags oldconfig" background
 	if [[ $(VER $1) < $(VER 2.5) ]]; then
-	    invoke_command "make KERNELRELEASE=$1 dep" "make dep" background
+	    invoke_command "make $make_flags KERNELRELEASE=$1 dep" "make $make_flags dep" background
 	else
-	    invoke_command "make KERNELRELEASE=$1 prepare scripts" "make prepare" background
+	    invoke_command "make $make_flags KERNELRELEASE=$1 prepare scripts" "make $make_flags prepare" background
 	fi
     fi
     cd - >/dev/null
